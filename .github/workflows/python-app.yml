# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main, dev, v2-proposal ]
  pull_request:
    branches: [ main, dev, v2-proposal ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

    - name: Bootstrap poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py \
        | python -
      
    - name: Update PATH
      run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Configure poetry
      run: poetry config virtualenvs.in-project true

    - name: Set up Cache
      uses: actions/cache@v2
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Ensure cache is healthy
      if: steps.cache.outputs.cache-hit == 'true'
      run: timeout 10s poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      run: poetry install

    - name: Lint with flake8
      run: |
        # Stop the build if there are one of the following error codes
        poetry run flake8 ./tidysic/ ./tests/ --count --select=E9,F63,F7,F81,F82,F83,F84,F401 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 ./tidysic/ ./tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Typing with mypy
      run: poetry run mypy -p tidysic --ignore-missing-imports
  
    - name: Test with pytest
      run: poetry run python -m pytest tests/
